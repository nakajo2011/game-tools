{"version":3,"sources":["modules/SimpleCardDrawModule.ts","constants.ts","right_menu/SelectColor.tsx","right_menu/DeckSettings.tsx","right_menu/DeckInfos.tsx","right_menu/RightMenu.tsx","main_screen/Card.tsx","main_screen/Deck.tsx","main_screen/Hand.tsx","main_screen/Trash.tsx","main_screen/MainScreen.tsx","App.tsx","serviceWorker.ts","RootReducer.ts","store.ts","index.tsx"],"names":["init","min","max","deckSet","cards","Array","from","keys","map","i","getArray","multiples","concat","deck","array","out","length","r","Math","floor","random","tmp","shuffle","hand","trash","color","initialState","state","SimpleCardDrawModule","createSlice","name","reducers","generate","action","p","payload","generated","draw","card","pop","push","trashCard","filter","c","revert","revertCard","setColor","newColor","actions","useStyles","makeStyles","theme","fieldset","width","display","marginBottom","spacing","white","400","600","colors","red","orange","green","SelectColor","dispatch","useDispatch","classes","React","useState","selectedValue","setSelectedValue","ColoredRadio","colorTable","value","withStyles","root","backgroundColor","checked","props","Radio","handleChange","event","target","WhiteRadio","GreenRadio","RedRadio","OrangeRadio","FormControl","component","className","FormLabel","onChange","inputProps","margin","input","borderRadius","border","padding","divider","DeckSettings","useInput","type","label","num","setValue","TextField","id","size","e","Number","minInput","maxInput","deckSetInput","noValidate","autoComplete","FormHelperText","Button","variant","onClick","settings","Divider","DeckInfos","cardsState","useSelector","Box","RightMenu","Card","bgcolor","paper","marginLeft","textAlign","height","background","deckPaper","position","Paper","elevation","cardSheet","Deck","Container","fixed","top","papers","style","left","key","createDeck","DECK_LEFT_POS","lastCard","handSheet","Hand","fontSize","Trash","flexGrow","container","palette","primary","light","deckField","borderColor","grey","A100","trashField","secondary","handField","MainScreen","Grid","item","xs","offset","mixins","toolbar","text","App","Fragment","AppBar","Toolbar","Typography","Boolean","window","location","hostname","match","RootReducer","combineReducers","reducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0aAgCA,I,EAAMA,EAAO,SAACC,EAAaC,EAAaC,GAItC,IAHA,IAAMC,EAhBS,SAACH,EAAaC,GAC7B,OAAOG,MAAMC,KAAKD,MAAMH,EAAMD,EAAM,GAAGM,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAER,KAe5CS,CAAST,EAAKC,GAExBS,EAAsB,GAClBF,EAAE,EAAGA,EAAEN,EAASM,IACtBE,EAAYA,EAAUC,OAAOR,GAI/B,MAAO,CACLS,KArBG,SAAoBC,GAEzB,IADA,IAAMC,EAAMV,MAAMC,KAAKQ,GACdL,EAAIM,EAAIC,OAAS,EAAGP,EAAI,EAAGA,IAAK,CACvC,IAAMQ,EAAIC,KAAKC,MAAMD,KAAKE,UAAYX,EAAI,IACpCY,EAAMN,EAAIN,GAChBM,EAAIN,GAAKM,EAAIE,GACbF,EAAIE,GAAKI,EAEX,OAAON,EAUIO,CAAQX,GAIjBY,KAAM,GACNC,MAAO,GACPC,MAAO,KAILC,EAAgB,WACpB,IAAMC,EAAS3B,EAAK,EAAG,GAAI,GAE3B,OADA2B,EAAMF,MCnDwC,UDoDvCE,EAHa,GAOhBC,EAAuBC,YAAY,CACvCC,KAAM,aACNJ,aAAcA,EACdK,SAAU,CACRC,SADQ,SACEL,EAAcM,GACtB,IAAMC,EAAID,EAAOE,QACXC,EAAYpC,EAAKkC,EAAEjC,IAAKiC,EAAEhC,IAAKgC,EAAE/B,SACvCwB,EAAMd,KAAOuB,EAAUvB,KACvBc,EAAMJ,KAAOa,EAAUb,KACvBI,EAAMH,MAAQY,EAAUZ,OAE1Ba,KARQ,SAQFV,EAAcM,GAClB,IAAMpB,EAAOc,EAAMd,KACbU,EAAOI,EAAMJ,KAEnB,GAAGV,EAAKG,OAAS,EAAG,CAClB,IAAMsB,EAAezB,EAAK0B,OAAS,EACnChB,EAAKiB,KAAKF,GAGZX,EAAMd,KAAOA,EACbc,EAAMJ,KAAOA,GAEfC,MApBQ,SAoBDG,EAAcM,GACnB,IAAMQ,EAAYR,EAAOE,QACzBR,EAAMJ,KAAOI,EAAMJ,KAAKmB,QAAO,SAAAC,GAAC,OAAIA,IAAMF,KAC1Cd,EAAMH,MAAMgB,KAAKC,IAEnBG,OAzBQ,SAyBAjB,EAAcM,GACpB,IAAMY,EAAaZ,EAAOE,QAC1BR,EAAMH,MAAQG,EAAMH,MAAMkB,QAAO,SAAAC,GAAC,OAAIA,IAAME,KAC5ClB,EAAMJ,KAAKiB,KAAKK,IAElBC,SA9BQ,SA8BCnB,EAAcM,GACrB,IAAMc,EAAWd,EAAOE,QACxBR,EAAMF,MAAQsB,M,EAOhBnB,EAAqBoB,QAEVpB,G,EAHbI,S,EAAUK,K,EAAMb,M,EAAOoB,OAGVhB,GE3FTqB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,MAAO,OACPC,QAAS,eACTC,aAAcJ,EAAMK,QAAQ,QAI1BC,EAAQ,CACZC,IAAK,UACLC,IAAK,UACL,GAAM,WAQFC,GAAW,mBALS,MAMXC,IAAI,MADF,cAJY,SAMXC,IAAO,MAFR,cAHW,QAMXC,IAAM,MAHN,cAFW,QD1BoB,WC4B/B,GAOF,SAASC,IAEtB,IAAMC,EAAWC,cAGXC,EAAUlB,IALoB,EAOMmB,IAAMC,SAhBtB,SASU,mBAO7BC,EAP6B,KAOdC,EAPc,KAS9BC,EAAe,SAACC,EAAiBC,GACrC,OAAOC,YAAW,CAChBC,KAAM,CACJC,gBAAiBJ,EAAU,GAC3BhD,MAAOgD,EAAW,KAClB,YAAa,CACXhD,MAAOgD,EAAW,OAGtBK,QAAS,IARJH,EASJ,SAACI,GAAD,OAAgB,kBAACC,EAAA,EAAD,eAAOvD,MAAM,UACNqD,QAASR,IAAkBI,EAC3BA,MAAOA,GACHK,QAG1BE,EAAe,SAACC,GACpBX,EAAiBW,EAAMC,OAAOT,OAvBf,SAACJ,GAA0BL,EAASrC,EAAqBoB,QAAQF,SAASc,EAAOU,KAwBhGxB,CAASoC,EAAMC,OAAOT,QAGlBU,EAAaZ,EAAaf,EAvCN,SAwCpB4B,EAAab,EAAaT,IAzCN,SA0CpBuB,EAAWd,EAAaX,IA5CN,OA6ClB0B,EAAcf,EAAaV,IA5CN,UA8C3B,OACE,kBAAC0B,EAAA,EAAD,CAAaC,UAAU,MAAMC,UAAWvB,EAAQf,UAC9C,kBAACuC,EAAA,EAAD,wCACA,kBAACP,EAAD,CACEQ,SAAUX,EACVnD,KAAK,qBACL+D,WAAY,CAAC,aAAc,OAE7B,kBAACP,EAAD,CACEM,SAAUX,EACVnD,KAAK,mBACL+D,WAAY,CAAC,aAAc,OAE7B,kBAACN,EAAD,CACEK,SAAUX,EACVnD,KAAK,sBACL+D,WAAY,CAAC,aAAc,OAE7B,kBAACR,EAAD,CACEO,SAAUX,EACVnD,KAAK,qBACL+D,WAAY,CAAC,aAAc,QCnFnC,IAAM5C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyB,KAAM,CACJ,QAAS,CACPkB,OAAQ3C,EAAMK,QAAQ,KAG1BuC,MAAO,CACL1C,MAAO,OAETD,SAAU,CACR4C,aAAc,OACdC,OAAQ,YACRC,QAAS,MACT7C,MAAO,QAET8C,QAAS,CACPL,OAAQ3C,EAAMK,QAAQ,QAIX,SAAS4C,IACtB,IAAMjC,EAAUlB,IAIhB,SAASoD,EAAT,GAAuE,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,IAAqC,EAC1CnC,mBAASmC,GADiC,mBAC7D9B,EAD6D,KACtD+B,EADsD,KAGpE,MAAO,CAAC/B,EADM,kBAACgC,EAAA,EAAD,CAAWC,GAAG,sBAAsBjB,UAAWvB,EAAQ4B,MAAOQ,MAAOA,EAAOD,KAAMA,EAAMM,KAAK,QAAQlC,MAAOA,EAAOkB,SAAU,SAAAiB,GAAC,OAAIJ,EAASK,OAAOD,EAAE1B,OAAOT,YAPtI,MAWb2B,EAAS,CAAEC,KAAM,SAAUC,MAAO,MAAOC,IAAK,IAXjC,mBAW9BvG,EAX8B,KAWzB8G,EAXyB,OAYbV,EAAS,CAAEC,KAAM,SAAUC,MAAO,MAAOC,IAAK,KAZjC,mBAY9BtG,EAZ8B,KAYzB8G,EAZyB,OAaLX,EAAS,CAAEC,KAAM,SAAUC,MAAO,MAAOC,IAAK,IAbzC,mBAa9BrG,EAb8B,KAarB8G,EAbqB,KAgB/BhD,EAAWC,cAOjB,OACE,0BAAMwB,UAAWvB,EAAQS,KAAMsC,YAAU,EAACC,aAAa,OACrD,kBAAC3B,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWvB,EAAQf,UACnD,kBAACuC,EAAA,EAAD,CAAWF,UAAU,UAArB,0DACCsB,EACD,kBAACK,EAAA,EAAD,qBACCJ,EACD,kBAACI,EAAA,EAAD,mDACCH,EACD,kBAACG,EAAA,EAAD,2EACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAW7F,MAAM,UAAU8F,QAAS,kBAfzC,WACf,IAAIC,EAA8B,CAACvH,MAAKC,MAAKC,WAC7C8D,EAASrC,EAAqBoB,QAAQhB,SAASwF,IAaexF,KAA1D,gBAEA,kBAACyF,EAAA,EAAD,CAASH,QAAQ,SAAS5B,UAAWvB,EAAQgC,UAC7C,kBAACnC,EAAD,Q,aC1DFf,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyB,KAAM,CACJ,QAAS,CACPkB,OAAQ3C,EAAMK,QAAQ,KAG1BuC,MAAO,CACL1C,MAAO,OAETD,SAAU,CACR4C,aAAc,OACdC,OAAQ,YACRC,QAAS,MACT7C,MAAO,YAII,SAASqE,IACtB,IAAMvD,EAAUlB,IAEV0E,EAAaC,aAAY,SAACjG,GAAD,OAAsBA,EAAMgG,cAC3D,OACE,kBAACnC,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAWvB,EAAQf,UACnD,kBAACuC,EAAA,EAAD,CAAWF,UAAU,UAArB,kCACA,kBAACoC,EAAA,EAAD,6CACUF,EAAW9G,KAAKG,OAD1B,UAGA,kBAAC6G,EAAA,EAAD,uCACSF,EAAWpG,KAAKP,OADzB,UAGA,kBAAC6G,EAAA,EAAD,6CACUF,EAAWnG,MAAMR,OAD3B,WChCS,SAAS8G,IACtB,OACE,6BACE,kBAAC1B,EAAD,MACA,kBAACsB,EAAD,O,YCqBS,SAASK,EAAKhD,GAC3B,IAxBiBiD,EAwBXvG,EAAQmG,aAAY,SAACjG,GAAD,OAAsBA,EAAMgG,WAAWlG,SAC3D0C,GAzBW6D,EAyBSvG,EAxBnByB,aAAW,SAACC,GAAD,MAAY,CAC5B8E,MAAO,CACL/B,QAAS/C,EAAMK,QAAQ,GACvB0E,WAAY/E,EAAMK,QAAQ,GAC1B2E,UAAW,SACX9E,MAAOF,EAAMK,QAAQ,GACrB4E,OAAQjF,EAAMK,QAAQ,GACtBF,QAAS,eACT+E,WAAYL,GAEdM,UAAW,CACTC,SAAU,WACVrC,QAAS/C,EAAMK,QAAQ,GACvB2E,UAAW,SACX9E,MAAOF,EAAMK,QAAQ,GACrB4E,OAAQjF,EAAMK,QAAQ,GACtBF,QAAS,eACT+E,WAAYL,MAjBT9E,IAyBP,OACE,kBAACsF,EAAA,EAAD,eAAO9C,UAAWX,EAAMlE,KAAMsD,EAAQmE,UAAWnE,EAAQ8D,MAAOQ,UAAW,GAAO1D,ICzBtF,IAAM9B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8E,MAAO,CACLM,SAAU,WACVrC,QAAS/C,EAAMK,QAAQ,GACvB2E,UAAW,SACX9E,MAAOF,EAAMK,QAAQ,GACrB4E,OAAQjF,EAAMK,QAAQ,GACtBF,QAAS,gBAGXoF,UAAW,CACTH,SAAU,WACVH,OAAQjF,EAAMK,QAAQ,SA8BX,SAASmF,IAEtB,IAAM1E,EAAWC,cAEXrD,EAAiB+G,aAAY,SAACjG,GAAD,OAAsBA,EAAMgG,WAAW9G,QAEpEsD,EAAUlB,IAWhB,OACE,kBAAC2F,EAAA,EAAD,CAAWC,OAAK,EAACnD,UAAWvB,EAAQuE,WAtCrB,SAAClC,EAAarC,GAK/B,IAJA,IAAI2E,EAPqB,IASnBC,EAAS,GAENtI,EAAI,EAAGA,EAAI+F,EAAM,EAAG/F,IAAK,CAChC,IAAMuI,EAAQ,CAACF,IAAKA,EAAM,KAAMG,KAAMA,QAChChB,EACJ,kBAACF,EAAD,CAAMlH,MAAM,EAAMmI,MAAOA,EAAOP,UAAW,EAAGS,IAAK,QAAQzI,IAE7DsI,EAAOvG,KAAKyF,GACZa,GAfS,EAiBX,OACE,6BACGC,GAwBAI,CAAWtI,EAAKG,QAXJ,WACf,GAAIH,EAAKG,OAAS,EAChB,OACE,kBAAC+G,EAAD,CAAMlH,MAAM,EAAMmI,MAAO,CAACF,KAjCbtC,EAiC8B3F,EAAKG,OArC7B,IAEd,GAE+CwF,EAAM,GAiCA,MAAMyC,KAAMG,QAC/D7B,QAAS,kBAPHtD,EAASrC,EAAqBoB,QAAQX,SAOrB6G,IAAK,SAASrI,EAAKG,OAAO,KAlC5C,IAACwF,EA0Cd6C,I,YC9DDpG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmG,UAAW,CACThG,QAAS,eACT8E,OAAQjF,EAAMK,QAAQ,SAIX,SAAS+F,IAEtB,IAF6B,EAEvBtF,EAAWC,cAEX3C,EAAiBqG,aAAY,SAACjG,GAAD,OAAsBA,EAAMgG,WAAWpG,QACpE4C,EAAUlB,IAGV7C,EAAQ,GARe,cASdmB,GATc,yBASrBiF,EATqB,QAU3BpG,EAAMoC,KAEF,kBAACuF,EAAD,CAAMmB,IAAK,QAAQ1C,EAAKe,QAAS,kBALxBjF,EAKoCkE,EALnBvC,EAASrC,EAAqBoB,QAAQxB,MAAMc,IAA9D,IAACA,IAMP,kBAACuF,EAAA,EAAD,CAAK2B,SAAU,IAAKhD,MAJ5B,IAAI,EAAJ,qBAAqB,IATQ,8BAkB7B,OACE,kBAACoC,EAAA,EAAD,CAAWC,OAAK,EAACnD,UAAWvB,EAAQmF,WACjClJ,GC3BP,IAAM6C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmG,UAAW,CACThG,QAAS,eACT8E,OAAQjF,EAAMK,QAAQ,SAIX,SAASiG,IAEtB,IAF8B,EAExBxF,EAAWC,cAEX1C,EAAkBoG,aAAY,SAACjG,GAAD,OAAsBA,EAAMgG,WAAWnG,SACrE2C,EAAUlB,IAGV7C,EAAQ,GARgB,cASfoB,GATe,yBAStBgF,EATsB,QAU5BpG,EAAMoC,KAEF,kBAACuF,EAAD,CAAMmB,IAAK,QAAQ1C,EAAKe,QAAS,kBALvBjF,EAKoCkE,EALnBvC,EAASrC,EAAqBoB,QAAQJ,OAAON,IAA/D,IAACA,IAMR,kBAACuF,EAAA,EAAD,CAAK2B,SAAU,IAAKhD,MAJ5B,IAAI,EAAJ,qBAAsB,IATQ,8BAkB9B,OACE,kBAACoC,EAAA,EAAD,CAAWC,OAAK,EAACnD,UAAWvB,EAAQmF,WACjClJ,GC5BP,IAAM6C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyB,KAAM,CACJ8E,SAAU,EACVtB,OAAQ,QAEVH,MAAO,CACLM,SAAU,WACVrC,QAAS/C,EAAMK,QAAQ,GACvB2E,UAAW,SACX9E,MAAOF,EAAMK,QAAQ,GACrB4E,OAAQjF,EAAMK,QAAQ,GACtBF,QAAS,gBAEXqG,UAAW,CACT7D,OAAQ3C,EAAMK,QAAQ,GACtB0C,QAAS/C,EAAMK,QAAQ,GACvBqB,gBAAiB1B,EAAMyG,QAAQC,QAAQC,OAEzCC,UAAW,CACT/D,aAAc,OACdC,OAAQ,YACR+D,YAAa7G,EAAMyG,QAAQK,KAAKC,MAElCC,WAAY,CACVnE,aAAc,OACdC,OAAQ,YACR+D,YAAa7G,EAAMyG,QAAQQ,UAAUN,OAEvCO,UAAW,CACTrE,aAAc,OACdC,OAAQ,YACR+D,YAAa7G,EAAMyG,QAAQC,QAAQC,MACnC1B,OAAQ,WAIG,SAASkC,KAEtB,IAAMnG,EAAUlB,IAChB,OACE,kBAAC2F,EAAA,EAAD,CAAWC,OAAK,EAACnD,UAAWvB,EAAQS,MAClC,kBAAC2F,EAAA,EAAD,CAAMZ,WAAS,EAACnG,QAAS,GACvB,kBAAC+G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAWnD,UAAU,WAAWC,UAAWvB,EAAQ4F,WACjD,kBAAC3C,EAAA,EAAD,CAAgB3B,UAAU,UAA1B,8CACA,kBAACkD,EAAD,QAGJ,kBAAC4B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAWnD,UAAU,WAAWC,UAAWvB,EAAQgG,YACjD,kBAAC/C,EAAA,EAAD,CAAgB3B,UAAU,UAA1B,oDACA,kBAACgE,EAAD,SAIN,yBAAKT,MAAO,CAAC9C,QAAS,eACtB,kBAAC0C,EAAA,EAAD,CAAWnD,UAAU,WAAWC,UAAWvB,EAAQkG,WACjD,kBAACjD,EAAA,EAAD,CAAgB3B,UAAU,UAA1B,8CACA,kBAAC8D,EAAD,QCzDR,IAAMtG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuH,OAAQvH,EAAMwH,OAAOC,QAErBhG,KAAM,CACJ8E,SAAU,EACVtB,OAAQ,SAEVH,MAAO,CACL/B,QAAS/C,EAAMK,QAAQ,GACvB2E,UAAW,SACX1G,MAAO0B,EAAMyG,QAAQiB,KAAKT,eAkCfU,OA9Bf,WACE,IAAM3G,EAAUlB,KAChB,OACE,kBAAC,IAAM8H,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQzC,SAAS,QAAQ9G,MAAM,WAC7B,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAK7F,MAAM,WAA/B,gBAKJ,yBAAKiE,UAAWvB,EAAQuG,SACxB,kBAAC9B,EAAA,EAAD,CAAWC,OAAK,EAACnD,UAAWvB,EAAQS,MAClC,6BACE,kBAAC2F,EAAA,EAAD,CAAMZ,WAAS,EAACnG,QAAS,GACvB,kBAAC+G,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACH,GAAD,OAEF,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC7B,EAAA,EAAD,CAAWnH,MAAM,aACf,kBAACqG,EAAD,aC9BIqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCVSC,GALKC,aAAgB,CAClC9D,WAAY/F,EAAqB8J,UCIpBC,GALDC,YAAe,CAC3BF,QAASF,KCIXK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,QAGJK,SAASC,eAAe,SH6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0e4dc8e5.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {red} from '@material-ui/core/colors';\nimport { DEFAULT_CARD_COLOR_WHITE } from \"../constants\";\n\ntype State = {\n  deck: number[],\n  hand: number[],\n  trash: number[],\n  color: string,\n}\n\nexport type DeckSettingsState = {\n  min: number,\n  max: number,\n  deckSet: number,\n}\n\nconst getArray = (min: number, max: number) => {\n  return Array.from(Array(max - min + 1).keys()).map(i => i+min)\n}\n\nexport function shuffle<T>(array: T[]) {\n  const out = Array.from(array);\n  for (let i = out.length - 1; i > 0; i--) {\n    const r = Math.floor(Math.random() * (i + 1));\n    const tmp = out[i];\n    out[i] = out[r];\n    out[r] = tmp;\n  }\n  return out;\n}\n\nconst init = (min: number, max: number, deckSet: number) => {\n  const cards = getArray(min, max);\n\n  let multiples: number[] = [];\n  for(let i=0; i<deckSet; i++) {\n    multiples = multiples.concat(cards);\n  }\n  let deck = shuffle(multiples);\n\n  return {\n    deck: deck,\n    hand: [],\n    trash: [],\n    color: '',\n  }\n};\n\nconst initialState = (() => {\n  const state =  init(1, 10, 1);\n  state.color = DEFAULT_CARD_COLOR_WHITE;\n  return state;\n})();\n\n// createSlice() で actions と reducers を一気に生成\nconst SimpleCardDrawModule = createSlice({\n  name: \"cardsState\",\n  initialState: initialState,\n  reducers: {\n    generate (state: State, action: PayloadAction<DeckSettingsState>) {\n      const p = action.payload;\n      const generated = init(p.min, p.max, p.deckSet);\n      state.deck = generated.deck;\n      state.hand = generated.hand;\n      state.trash = generated.trash;\n    },\n    draw (state: State, action: PayloadAction<void>) {\n      const deck = state.deck;\n      const hand = state.hand;\n\n      if(deck.length > 0) {\n        const card: number = deck.pop() || 0;\n        hand.push(card);\n      }\n\n      state.deck = deck;\n      state.hand = hand;\n    },\n    trash (state: State, action: PayloadAction<number>) {\n      const trashCard = action.payload;\n      state.hand = state.hand.filter(c => c !== trashCard);\n      state.trash.push(trashCard);\n    },\n    revert (state: State, action: PayloadAction<number>) {\n      const revertCard = action.payload;\n      state.trash = state.trash.filter(c => c !== revertCard);\n      state.hand.push(revertCard);\n    },\n    setColor(state: State, action: PayloadAction<string>) {\n      const newColor = action.payload;\n      state.color = newColor;\n    }\n  }\n});\n\nexport const {\n  generate, draw, trash, revert,\n} = SimpleCardDrawModule.actions\n\nexport default SimpleCardDrawModule;","export const DEFAULT_CARD_COLOR_WHITE: string = '#ffffff'","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport {FormControl, FormLabel, Radio} from '@material-ui/core';\nimport {green, orange, red} from '@material-ui/core/colors';\nimport {RootState} from \"../RootReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport SimpleCardDrawModule from \"../modules/SimpleCardDrawModule\";\nimport {DEFAULT_CARD_COLOR_WHITE} from \"../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  fieldset: {\n    width: \"100%\",\n    display: \"inline-block\",\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst white = {\n  400: '#f0f0f0',\n  600: '#fcfcfc',\n  'bg': '#666666',\n};\n\nconst RED_VALUE: string = \"red\";\nconst ORANGE_VALUE: string = \"orange\";\nconst GREEN_VALUE: string = \"green\";\nconst WHITE_VALUE: string = \"white\";\n\nconst colors: any = {\n  [RED_VALUE]: red[100],\n  [ORANGE_VALUE]: orange[100],\n  [GREEN_VALUE]: green[100],\n  [WHITE_VALUE]: DEFAULT_CARD_COLOR_WHITE,\n};\n\nexport default function SelectColor() {\n  // dispatch の取得\n  const dispatch = useDispatch();\n  const setColor = (selectedValue: string) => dispatch(SimpleCardDrawModule.actions.setColor(colors[selectedValue]));\n\n  const classes = useStyles();\n  // state の取得\n  const [selectedValue, setSelectedValue] = React.useState(WHITE_VALUE);\n\n  const ColoredRadio = (colorTable: any, value: string) => {\n    return withStyles({\n      root: {\n        backgroundColor: colorTable['bg'],\n        color: colorTable[400],\n        '&$checked': {\n          color: colorTable[600],\n        },\n      },\n      checked: {},\n    })((props: any) => <Radio color=\"default\"\n                              checked={selectedValue === value}\n                              value={value}\n                              {...props} />);\n  };\n\n  const handleChange = (event: any) => {\n    setSelectedValue(event.target.value);\n    setColor(event.target.value);\n  };\n\n  const WhiteRadio = ColoredRadio(white, WHITE_VALUE);\n  const GreenRadio = ColoredRadio(green, GREEN_VALUE);\n  const RedRadio = ColoredRadio(red, RED_VALUE);\n  const OrangeRadio = ColoredRadio(orange, ORANGE_VALUE);\n\n  return (\n    <FormControl component='div' className={classes.fieldset}>\n      <FormLabel>カードの色 </FormLabel>\n      <WhiteRadio\n        onChange={handleChange}\n        name=\"radio-button-white\"\n        inputProps={{'aria-label': 'W'}}\n      />\n      <RedRadio\n        onChange={handleChange}\n        name=\"radio-button-red\"\n        inputProps={{'aria-label': 'A'}}\n      />\n      <OrangeRadio\n        onChange={handleChange}\n        name=\"radio-button-orange\"\n        inputProps={{'aria-label': 'B'}}\n      />\n      <GreenRadio\n        onChange={handleChange}\n        name=\"radio-button-green\"\n        inputProps={{'aria-label': 'C'}}\n      />\n    </FormControl>\n  );\n}","import React, { useState } from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {FormControl, FormLabel, FormHelperText, Button, Divider} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport SelectColor from './SelectColor';\nimport {useDispatch} from \"react-redux\";\nimport SimpleCardDrawModule, {DeckSettingsState} from \"../modules/SimpleCardDrawModule\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    width: \"40%\",\n  },\n  fieldset: {\n    borderRadius: \"10px\",\n    border: \"1px solid\",\n    padding: \"8px\",\n    width: \"100%\",\n  },\n  divider: {\n    margin: theme.spacing(2),\n  }\n}));\n\nexport default function DeckSettings() {\n  const classes = useStyles();\n\n  interface useInputParams {type: string; label: string, num: number;}\n  // from: https://stackoverflow.com/questions/55757761/handle-an-input-with-react-hooks\n  function useInput({ type, label, num }: useInputParams):[number, any] {\n    const [value, setValue] = useState(num);\n    const input = <TextField id=\"standard-number-max\" className={classes.input} label={label} type={type} size=\"small\" value={value} onChange={e => setValue(Number(e.target.value))}/>;\n    return [value, input];\n  }\n\n  const [min, minInput] = useInput({ type: \"number\", label: \"min\", num: 1 });\n  const [max, maxInput] = useInput({ type: \"number\", label: \"max\", num: 10 });\n  const [deckSet, deckSetInput] = useInput({ type: \"number\", label: \"Set\", num: 1 });\n\n  // dispatch の取得\n  const dispatch = useDispatch();\n  // state の取得\n  const generate = () => {\n    let settings: DeckSettingsState = {min, max, deckSet};\n    dispatch(SimpleCardDrawModule.actions.generate(settings));\n  }\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <FormControl component='fieldset' className={classes.fieldset}>\n        <FormLabel component='legend'>デッキセッティング</FormLabel>\n        {minInput}\n        <FormHelperText>から</FormHelperText>\n        {maxInput}\n        <FormHelperText>までのカードを</FormHelperText>\n        {deckSetInput}\n        <FormHelperText>セット持つデッキを作成</FormHelperText>\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => generate()}>作成</Button>\n\n        <Divider variant=\"middle\" className={classes.divider}/>\n        <SelectColor/>\n      </FormControl>\n    </form>\n  );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {FormControl, FormLabel, Box} from '@material-ui/core';\nimport {RootState} from \"../RootReducer\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    width: \"40%\",\n  },\n  fieldset: {\n    borderRadius: \"10px\",\n    border: \"1px solid\",\n    padding: \"8px\",\n    width: \"100%\",\n  },\n}));\n\nexport default function DeckInfos() {\n  const classes = useStyles();\n  // state の取得\n  const cardsState = useSelector((state: RootState) => state.cardsState)\n  return (\n    <FormControl component='fieldset' className={classes.fieldset}>\n      <FormLabel component='legend'>デッキ情報</FormLabel>\n      <Box>\n        残りのカード {cardsState.deck.length}枚\n      </Box>\n      <Box>\n        手札カード {cardsState.hand.length}枚\n      </Box>\n      <Box>\n        捨て札カード {cardsState.trash.length}枚\n      </Box>\n    </FormControl>\n  );\n}","import React from 'react';\nimport DeckSettings from './DeckSettings';\nimport DeckInfos from './DeckInfos';\n\nexport default function RightMenu() {\n  return (\n    <div>\n      <DeckSettings/>\n      <DeckInfos/>\n    </div>\n  );\n}","import React from 'react';\nimport {Paper} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {RootState} from \"../RootReducer\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = (bgcolor: string) => {\n  return makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      textAlign: 'center',\n      width: theme.spacing(8),\n      height: theme.spacing(8),\n      display: \"inline-block\",\n      background: bgcolor,\n    },\n    deckPaper: {\n      position: 'absolute',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      width: theme.spacing(8),\n      height: theme.spacing(8),\n      display: \"inline-block\",\n      background: bgcolor,\n    }\n  }))();\n}\n\nexport default function Card(props: any) {\n  const color = useSelector((state: RootState) => state.cardsState.color)\n  const classes = useStyles(color);\n  return (\n    <Paper className={props.deck? classes.deckPaper: classes.paper} elevation={2} {...props} />\n  );\n}\n","import React from 'react';\nimport {Container} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from '../RootReducer'\nimport SimpleCardDrawModule from \"../modules/SimpleCardDrawModule\";\nimport Card from './Card';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    display: \"inline-block\",\n    // border: 'dashed 1px #ff0000',\n  },\n  cardSheet: {\n    position: \"relative\",\n    height: theme.spacing(32),\n  }\n}));\n\nconst DECK_START_TOP_POS = 100;\nconst DECK_LEFT_POS = 68;\nconst DIFF = 4;\n\nconst lastCardTop = (num: number) => DECK_START_TOP_POS - ((num - 1) * DIFF);\n\nconst createDeck = (num: number, classes: any) => {\n  let top = DECK_START_TOP_POS;\n  const left = DECK_LEFT_POS;\n  const papers = [];\n\n  for (let i = 0; i < num - 1; i++) {\n    const style = {top: top + \"px\", left: left + \"px\"};\n    const paper = (\n      <Card deck={true} style={style} elevation={2} key={\"deck_\"+i}/>\n    );\n    papers.push(paper);\n    top -= DIFF;\n  }\n  return (\n    <div>\n      {papers}\n    </div>\n  );\n};\n\nexport default function Deck() {\n  // dispatch の取得\n  const dispatch = useDispatch();\n  // state の取得\n  const deck: number[] = useSelector((state: RootState) => state.cardsState.deck)\n  const draw = () => dispatch(SimpleCardDrawModule.actions.draw());\n  const classes = useStyles();\n\n  const lastCard = () => {\n    if (deck.length > 0) {\n      return (\n        <Card deck={true} style={{top: lastCardTop(deck.length) + \"px\", left: DECK_LEFT_POS + \"px\"}}\n               onClick={() => draw()} key={\"deck_\"+(deck.length-1)} />\n      );\n    }\n  };\n\n  return (\n    <Container fixed className={classes.cardSheet}>\n      {createDeck(deck.length, classes)}\n      {lastCard()}\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Box, Container} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from '../RootReducer';\nimport Card from './Card';\nimport SimpleCardDrawModule from \"../modules/SimpleCardDrawModule\";\n\nconst useStyles = makeStyles((theme) => ({\n  handSheet: {\n    display: \"inline-block\",\n    height: theme.spacing(32),\n  }\n}));\n\nexport default function Hand() {\n  // dispatch の取得\n  const dispatch = useDispatch();\n  // state の取得\n  const hand: number[] = useSelector((state: RootState) => state.cardsState.hand)\n  const classes = useStyles();\n\n  const trash = (card: number) => dispatch(SimpleCardDrawModule.actions.trash(card));\n  const cards = []\n  for(let num of hand){\n    cards.push(\n      (\n        <Card key={\"hand_\"+num} onClick={() => trash(num)}>\n          <Box fontSize={32}>{num}</Box>\n        </Card>\n      )\n    )\n  }\n  return (\n    <Container fixed className={classes.handSheet}>\n      {cards}\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Box, Container} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from '../RootReducer'\nimport Card from './Card';\nimport SimpleCardDrawModule from \"../modules/SimpleCardDrawModule\";\n\nconst useStyles = makeStyles((theme) => ({\n  handSheet: {\n    display: \"inline-block\",\n    height: theme.spacing(32),\n  }\n}));\n\nexport default function Trash() {\n  // dispatch の取得\n  const dispatch = useDispatch();\n  // state の取得\n  const trash: number[] = useSelector((state: RootState) => state.cardsState.trash)\n  const classes = useStyles();\n\n  const revert = (card: number) => dispatch(SimpleCardDrawModule.actions.revert(card));\n  const cards = []\n  for(let num of trash){\n    cards.push(\n      (\n        <Card key={\"hand_\"+num} onClick={() => revert(num)}>\n          <Box fontSize={32}>{num}</Box>\n        </Card>\n      )\n    )\n  }\n  return (\n    <Container fixed className={classes.handSheet}>\n      {cards}\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Container, FormHelperText, Grid} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Deck from './Deck';\nimport Hand from './Hand';\nimport Trash from './Trash';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\",\n  },\n  paper: {\n    position: \"absolute\",\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    display: \"inline-block\",\n  },\n  container: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.primary.light,\n  },\n  deckField: {\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    borderColor: theme.palette.grey.A100,\n  },\n  trashField: {\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    borderColor: theme.palette.secondary.light,\n  },\n  handField: {\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    borderColor: theme.palette.primary.light,\n    height: \"40%\",\n  },\n}));\n\nexport default function MainScreen() {\n\n  const classes = useStyles();\n  return (\n    <Container fixed className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          <Container component=\"fieldset\" className={classes.deckField}>\n            <FormHelperText component=\"legend\">山札フィールド</FormHelperText>\n            <Deck/>\n          </Container>\n        </Grid>\n        <Grid item xs={8}>\n          <Container component=\"fieldset\" className={classes.trashField}>\n            <FormHelperText component=\"legend\">捨て札フィールド</FormHelperText>\n            <Trash/>\n          </Container>\n        </Grid>\n      </Grid>\n      <div style={{padding: \"8px 0 0 0\"}}/>\n      <Container component=\"fieldset\" className={classes.handField}>\n        <FormHelperText component=\"legend\">手札フィールド</FormHelperText>\n        <Hand/>\n      </Container>\n    </Container>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport {AppBar, Toolbar, Typography, Container} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport RightMenu from './right_menu/RightMenu';\nimport MainScreen from './main_screen/MainScreen';\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h4\" color=\"inherit\">\n            Game Tools\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      <Container fixed className={classes.root}>\n        <div>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <MainScreen/>\n            </Grid>\n            <Grid item xs={3}>\n              <Container color=\"secondary\">\n                <RightMenu/>\n              </Container>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport SimpleCardDrawModule from './modules/SimpleCardDrawModule';\n\nconst RootReducer = combineReducers({\n  cardsState: SimpleCardDrawModule.reducer\n});\n\nexport type RootState = ReturnType<typeof RootReducer>;\nexport default RootReducer;","import { configureStore } from '@reduxjs/toolkit'\nimport RootReducer from './RootReducer'\n\nconst store = configureStore({\n  reducer: RootReducer\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store  from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}